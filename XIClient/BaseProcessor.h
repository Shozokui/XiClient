#pragma once
#define WIN32_LEAN_AND_MEAN
#include "CMoProcessor.h"
#include "WMatrix.h"
namespace FFXI {
	namespace CYy {
		class BaseProcessor : public CMoProcessor {
		public:
			static const FFXI::Math::WMatrix IdentityMatrix;
			static void InitProcessor();
			static void DestroyProcessor();
			virtual void VirtProcessor1(FFXI::Math::WMatrix*);
			virtual void VirtProcessor2();
			virtual void VirtProcessor3(FFXI::Math::WMatrix*, FFXI::Math::WMatrix*, FFXI::Math::WMatrix*);
			virtual void MatrixMultiply(FFXI::Math::WMatrix*, FFXI::Math::WMatrix*, FFXI::Math::WMatrix*);
			virtual void VirtProcessor5();
			virtual void VirtProcessor6();
			virtual void VirtProcessor7();
			virtual void VirtProcessor8();
			virtual double Vec3Dot(D3DXVECTOR3*, D3DXVECTOR3*);
			virtual void VirtProcessor10(float*, float*, float*);
			virtual void VirtProcessor11(D3DXVECTOR4*, FFXI::Math::WMatrix*, D3DXVECTOR3*);
			virtual void VirtProcessor12();
			virtual void VirtProcessor13();
			virtual void VirtProcessor14(D3DXVECTOR3*, FFXI::Math::WMatrix*, D3DXVECTOR3*);
			virtual void VirtProcessor15(D3DVECTOR*, FFXI::Math::WMatrix*, D3DVECTOR*);
			virtual void VirtProcessor16(D3DXVECTOR3*, D3DXVECTOR3*, D3DXVECTOR3*, float);
			virtual void VirtProcessor17(FFXI::Math::WMatrix*, float, float, float);
			virtual void VirtProcessor18();
			virtual void VirtProcessor19();
			virtual void VirtProcessor20(FFXI::Math::WMatrix*, float);
			virtual void VirtProcessor21(FFXI::Math::WMatrix*, float);
			virtual void VirtProcessor22(FFXI::Math::WMatrix*, float, float, float);
			virtual void VirtProcessor23();
			virtual void VirtProcessor24(FFXI::Math::WMatrix*, FFXI::Math::WMatrix*, float);
			virtual void VirtProcessor25(FFXI::Math::WMatrix*, FFXI::Math::WMatrix*, float);
			virtual void VirtProcessor26();
			virtual void VirtProcessor27(D3DXVECTOR3*, D3DXVECTOR3*, int, D3DXMATRIX*, D3DXMATRIX*, float, float);
			virtual void VirtProcessor28();
			virtual void VirtProcessor29();
			virtual void VirtProcessor30(D3DXVECTOR4*, D3DXVECTOR4*, int, Math::WMatrix*, Math::WMatrix*, float, float);
			virtual void VirtProcessor31(float*, float*, int, int, Math::WMatrix*);
			virtual float Vec3Magnitude(D3DXVECTOR3*);
			virtual void VirtProcessor33();
			virtual void VirtProcessor34(float*, float*);
			virtual void VirtProcessor35(D3DXVECTOR3*);
			virtual void Vec3Normalize(D3DXVECTOR3*);
			virtual void VirtProcessor37();
			virtual void VirtProcessor38();
			virtual void VirtProcessor39();
			virtual void VirtProcessor40(FFXI::Math::WMatrix*, FFXI::Math::WMatrix*);
			virtual void VirtProcessor41();
			virtual void MatrixTranspose(FFXI::Math::WMatrix*, FFXI::Math::WMatrix*);
			virtual void VirtProcessor43();
			virtual void MatrixIdentity(FFXI::Math::WMatrix*);
			virtual void VirtProcessor45();
			BaseProcessor();
			void PushToStack(FFXI::Math::WMatrix*);
			void PopFromStack(FFXI::Math::WMatrix**);
			FFXI::Math::WMatrix Matrices[32];
			FFXI::Math::WMatrix field_810;
			FFXI::Math::WMatrix field_850;
			FFXI::Math::WMatrix field_890;
			FFXI::Math::WMatrix field_8D0;
			D3DXVECTOR3 field_910;
			int field_91C;
			D3DXVECTOR4 field_920;
			int field_930;
			int field_934;
			int field_938;
			int field_93C;
			int field_940;
			int field_944;
			int field_948;
			int field_94C;
			int field_950;
			int field_954;
			int field_958;
			int field_95C;
			int field_960;
			int field_964;
			int field_968;
			int field_96C;
			int field_970;
			int field_974;
			int field_978;
			int field_97C;
			int field_980;
			int field_984;
			int field_988;
			int field_98C;
			int field_990;
			int field_994;
			int field_998;
			int field_99C;
			int field_9A0;
			int field_9A4;
			int field_9A8;
			int field_9AC;
			int field_9B0;
			int field_9B4;
			int field_9B8;
			int field_9BC;
			int field_9C0;
			int field_9C4;
			int field_9C8;
			int field_9CC;
			int field_9D0;
			int field_9D4;
			int field_9D8;
			int field_9DC;
			int field_9E0;
			int field_9E4;
			int field_9E8;
			int field_9EC;
			int field_9F0;
			int field_9F4;
			int field_9F8;
			int field_9FC;
			int field_A00;
			int field_A04;
			int field_A08;
			int field_A0C;
			FFXI::Math::WMatrix* MatrixPointers[32];
			int MatrixPointerIndex;
			int field_A94;
			float field_A98;
			float field_A9C;
		};
	}
}